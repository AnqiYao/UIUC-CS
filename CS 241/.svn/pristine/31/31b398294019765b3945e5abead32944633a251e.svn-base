/**
* Text Editor Lab
* CS 241 - Spring 2018
*/

#include "sstream.h"

typedef struct sstream{
	char *str;
}sstream;
	
sstream *sstream_create(bytestring bytes) {
    // TODO implement
	sstream* result = malloc(sizeof(sstream)); 
	result -> str = malloc(strlen(bytes.str)+1);
	int i = 0;
	if(bytes.str == NULL) return result;
	else if(bytes.size < 0) {
		while(bytes.str[i]!='\0'){
			result[i] = bytes.str[i];
			i++;
		}
		return result; 
	}
	else{
		i = 0;
		for(; i < bytes.size; i++){
			result[i] = byte.str[i];
		}
//			result[bytes.size] = "\0";
		return result;
	}
}

void sstream_destroy(sstream *this) {
    // TODO implement
	free(this->str);
	this->str = NULL;
	free(this);
	this = NULL;
}

void sstream_str(sstream *this, bytestring bytes) {
    // TODO implement
	
}

bool sstream_eos(sstream *this) {
    // TODO implement
    return false;
}

char sstream_peek(sstream *this, ssize_t offset) {
    // TODO implement
    return '\0';
}

char sstream_getch(sstream *this) {
    // TODO implement
    return '\0';
}

size_t sstream_size(sstream *this) {
    // TODO implement
    return 0;
}

size_t sstream_tell(sstream *this) {
    // TODO implement
    return 0;
}

int sstream_seek(sstream *this, ssize_t offset, int whence) {
    // TODO implement
    return 0;
}

size_t sstream_remain(sstream *this) {
    // TODO implement
    return 0;
}

size_t sstream_read(sstream *this, bytestring *out, ssize_t count) {
    // TODO implement
    return 0;
}

void sstream_append(sstream *this, bytestring bytes) {
    // TODO implement
    return;
}

ssize_t sstream_subseq(sstream *this, bytestring bytes) {
    // TODO implement
    return 0;
}

size_t sstream_erase(sstream *this, ssize_t number) {
    // TODO implement
    return 0;
}

void sstream_write(sstream *this, bytestring bytes) {
    // TODO implement
}

void sstream_insert(sstream *this, bytestring bytes) {
    // TODO implement
}

int sstream_parse_long(sstream *this, long *out) {
    // TODO implement
    return 0;
}
