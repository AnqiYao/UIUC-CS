/**
* Utilities Unleashed Lab
* CS 241 - Spring 2018
*/

#include <format.h>


int main(int argc, char *argv[]) {
	if(argc<2) {
		print_time_usage();
	}
	timespec *tp;
	timespec *tp1;
	pid_t child_id = fork();
	if (child_id == -1) { 
		print_fork_failed();
	}
	else if (child_id > 0) { 
    		int status;
		waitpid( child_id, &status, 0 );
		clock_gettime(CLOCK_MONOTONIC,tp1);
		printf("%d\n",tp1-tp);
		return 1;		
	}

	else{
		clock_gettime(CLOCK_MONOTONIC,tp);
		execvp(argv[1],argv[1],arg[2],NULL);
		print_exec_failed();
	}
}
