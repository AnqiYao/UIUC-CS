/**
* Utilities Unleashed Lab
* CS 241 - Spring 2018
*/

#include "format.h"
#include <time.h>
#include <unistd.h>
#include <stdio.h>
#include <sys/wait.h>

int main(int argc, char *argv[]) {
	if(argc<2) {
		print_time_usage();
	}
	
	struct timespec start, stop;

	pid_t child_id = fork();

	if (child_id == -1) { 
		print_fork_failed();
	}
	else if (child_id > 0) { 
    		int status;
		pid_t pid = waitpid( child_id, &status, 0 );
		if(pid == 0 || pid == -1)
			print_fork_failed();
		else { 
		clock_gettime(CLOCK_MONOTONIC,&tp1);
		printf("%lf\n",(double)tp->tv_sec);
		display_results(argv, (double)(tp1.tv_sec - tp.tv_sec));
		return 1;
		}		
	}

	else{
		if( clock_gettime(CLOCK_MONOTONIC,&tp) == -1)
			print_time_usage();
		printf("%lf\n",(double)tp->tv_sec);
		execvp(argv[1],&argv[2]);
		print_exec_failed();
	}
}
