module gcd_control(done, x_sel, y_sel, x_en, y_en, output_en, go, x_lt_y, x_ne_y, clock, reset);
	output	x_sel, y_sel, x_en, y_en, output_en, done;
	input	go, x_lt_y, x_ne_y;
	input	clock, reset;
	wire   sGarbage_next,  sX_next,  sY_next, sT_next, sN_next, sX, sGarbage, sY, sT, sN;
        

	assign sN_next =  ~go|reset;
	assign sGarbage_next = (sN & go);
	assign sY_next =  ((sGarbage| sX | sY) & x_lt_y & go & ~reset) ;
	assign sX_next =  ((sGarbage| sX | sY) & ~(x_lt_y) & go & ~reset);
	assign sT_next =  ((sGarbage| sX | sY) & ~(x_ne_y) & go & ~reset);
	

	dffe fsGarbage(sGarbage, sGarbage_next, clock, 1'b1, reset);
	dffe fsY(sY, sY_next, clock, 1'b1, reset);
	dffe fsX(sX, sX_next, clock, 1'b1, reset);
	dffe fsT(sT, sT_next, clock, 1'b1, reset);
	dffe fsN(sN, sN_next, clock, 1'b1, reset);
	
	assign x_sel = sX;
        assign y_sel = sY; 
	assign x_en = (sX | sN);
	assign y_en = (sY | sN);
	assign output_en = sT;
	assign done = sT;


//(( sY & ~go) | (sX & ~go) | (sT & ~go) | (sN & ~go) |(sGarbage & ~go))| 

endmodule //GCD_control
